#chatgpt ai 
def length_of_longest_substring(s: str) -> int:
    """
    Function to find the length of the longest substring without repeating characters.

    Args:
        s (str): Input string.

    Returns:
        int: Length of the longest substring without repeating characters.
    """
    # Dictionary to store the last index of each character
    char_index_map = {}
    left = 0  # Left pointer for the sliding window
    max_length = 0  # Variable to store the length of the longest substring

    for right in range(len(s)):
        # If the character is already in the window, move the left pointer
        if s[right] in char_index_map and char_index_map[s[right]] >= left:
            left = char_index_map[s[right]] + 1  # Move left to the next position of the duplicate
        
        # Update or add the current character's index to the dictionary
        char_index_map[s[right]] = right
        
        # Calculate the length of the current window
        max_length = max(max_length, right - left + 1)
    
    return max_length

# Example usage:
s = "abcabcbb"
print(f"The length of the longest substring without repeating characters is: {length_of_longest_substring(s)}")
